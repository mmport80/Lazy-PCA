Elm.Form = Elm.Form || {};
Elm.Form.Input = Elm.Form.Input || {};
Elm.Form.Input.make = function (_elm) {
   "use strict";
   _elm.Form = _elm.Form || {};
   _elm.Form.Input = _elm.Form.Input || {};
   if (_elm.Form.Input.values) return _elm.Form.Input.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Form = Elm.Form.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm);
   var _op = {};
   var dumpErrors = function (form) {
      var line = function (_p0) {    var _p1 = _p0;return A2($Basics._op["++"],_p1._0,A2($Basics._op["++"],": ",$Basics.toString(_p1._1)));};
      var content = A2($String.join,"\n",A2($List.map,line,$Form.getErrors(form)));
      return A2($Html.pre,_U.list([]),_U.list([$Html.text(content)]));
   };
   var radioInput = F4(function (value,state,addr,attrs) {
      var formAttrs = _U.list([$Html$Attributes.type$("radio")
                              ,$Html$Attributes.name(value)
                              ,$Html$Attributes.checked(_U.eq(state.value,$Maybe.Just(value)))
                              ,A2($Html$Events.onFocus,addr,$Form.onFocus(state.path))
                              ,A2($Html$Events.onBlur,addr,$Form.onBlur(state.path))
                              ,A3($Html$Events.on,
                              "change",
                              $Html$Events.targetValue,
                              function (v) {
                                 return A2($Signal.message,addr,A2($Form.updateRadioField,state.path,v));
                              })]);
      return A2($Html.input,A2($Basics._op["++"],formAttrs,attrs),_U.list([]));
   });
   var selectInput = F4(function (options,state,addr,attrs) {
      var buildOption = function (_p2) {
         var _p3 = _p2;
         var _p4 = _p3._0;
         return A2($Html.option,
         _U.list([$Html$Attributes.value(_p4),$Html$Attributes.selected(_U.eq(state.value,$Maybe.Just(_p4)))]),
         _U.list([$Html.text(_p3._1)]));
      };
      var formAttrs = _U.list([$Html$Attributes.type$("checkbox")
                              ,A3($Html$Events.on,
                              "change",
                              $Html$Events.targetValue,
                              function (v) {
                                 return A2($Signal.message,addr,A2($Form.updateSelectField,state.path,v));
                              })
                              ,A2($Html$Events.onFocus,addr,$Form.onFocus(state.path))
                              ,A2($Html$Events.onBlur,addr,$Form.onBlur(state.path))]);
      return A2($Html.select,A2($Basics._op["++"],formAttrs,attrs),A2($List.map,buildOption,options));
   });
   _op["?="] = $Basics.flip($Maybe.withDefault);
   var baseInput = F4(function (t,state,addr,attrs) {
      var formAttrs = _U.list([$Html$Attributes.type$(t)
                              ,$Html$Attributes.value(A2(_op["?="],state.value,""))
                              ,A3($Html$Events.on,
                              "input",
                              $Html$Events.targetValue,
                              function (v) {
                                 return A2($Signal.message,addr,A2($Form.updateTextField,state.path,v));
                              })
                              ,A2($Html$Events.onFocus,addr,$Form.onFocus(state.path))
                              ,A2($Html$Events.onBlur,addr,$Form.onBlur(state.path))]);
      return A2($Html.input,A2($Basics._op["++"],formAttrs,attrs),_U.list([]));
   });
   var textInput = baseInput("text");
   var passwordInput = baseInput("password");
   var textArea = F3(function (state,addr,attrs) {
      var value = A2(_op["?="],state.value,"");
      var formAttrs = _U.list([A3($Html$Events.on,
                              "input",
                              $Html$Events.targetValue,
                              function (v) {
                                 return A2($Signal.message,addr,A2($Form.updateTextField,state.path,v));
                              })
                              ,A2($Html$Events.onFocus,addr,$Form.onFocus(state.path))
                              ,A2($Html$Events.onBlur,addr,$Form.onBlur(state.path))]);
      return A2($Html.textarea,A2($Basics._op["++"],formAttrs,attrs),_U.list([$Html.text(value)]));
   });
   var checkboxInput = F3(function (state,addr,attrs) {
      var formAttrs = _U.list([$Html$Attributes.type$("checkbox")
                              ,$Html$Attributes.checked(A2(_op["?="],state.value,false))
                              ,A3($Html$Events.on,
                              "change",
                              $Html$Events.targetChecked,
                              function (v) {
                                 return A2($Signal.message,addr,A2($Form.updateCheckField,state.path,v));
                              })
                              ,A2($Html$Events.onFocus,addr,$Form.onFocus(state.path))
                              ,A2($Html$Events.onBlur,addr,$Form.onBlur(state.path))]);
      return A2($Html.input,A2($Basics._op["++"],formAttrs,attrs),_U.list([]));
   });
   return _elm.Form.Input.values = {_op: _op
                                   ,baseInput: baseInput
                                   ,textInput: textInput
                                   ,passwordInput: passwordInput
                                   ,textArea: textArea
                                   ,checkboxInput: checkboxInput
                                   ,selectInput: selectInput
                                   ,radioInput: radioInput
                                   ,dumpErrors: dumpErrors};
};